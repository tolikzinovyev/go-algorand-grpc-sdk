// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.20.0--rc2
// source: service.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Status int32

const (
	Status_OFFLINE           Status = 0
	Status_ONLINE            Status = 1
	Status_NOT_PARTICIPATING Status = 2
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "OFFLINE",
		1: "ONLINE",
		2: "NOT_PARTICIPATING",
	}
	Status_value = map[string]int32{
		"OFFLINE":           0,
		"ONLINE":            1,
		"NOT_PARTICIPATING": 2,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_service_proto_enumTypes[0].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_service_proto_enumTypes[0]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{0}
}

type AccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address []byte `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *AccountRequest) Reset() {
	*x = AccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountRequest) ProtoMessage() {}

func (x *AccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountRequest.ProtoReflect.Descriptor instead.
func (*AccountRequest) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{0}
}

func (x *AccountRequest) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

type AssetParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total         uint64 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Decimals      uint32 `protobuf:"varint,2,opt,name=decimals,proto3" json:"decimals,omitempty"`
	DefaultFrozen bool   `protobuf:"varint,3,opt,name=default_frozen,json=defaultFrozen,proto3" json:"default_frozen,omitempty"`
	UnitName      []byte `protobuf:"bytes,4,opt,name=unit_name,json=unitName,proto3" json:"unit_name,omitempty"`
	AssetName     []byte `protobuf:"bytes,5,opt,name=asset_name,json=assetName,proto3" json:"asset_name,omitempty"`
	Url           []byte `protobuf:"bytes,6,opt,name=url,proto3" json:"url,omitempty"`
	MetadataHash  []byte `protobuf:"bytes,7,opt,name=metadata_hash,json=metadataHash,proto3" json:"metadata_hash,omitempty"`
	Manager       []byte `protobuf:"bytes,8,opt,name=manager,proto3" json:"manager,omitempty"`
	Reserve       []byte `protobuf:"bytes,9,opt,name=reserve,proto3" json:"reserve,omitempty"`
	Freeze        []byte `protobuf:"bytes,10,opt,name=freeze,proto3" json:"freeze,omitempty"`
	Clawback      []byte `protobuf:"bytes,11,opt,name=clawback,proto3" json:"clawback,omitempty"`
}

func (x *AssetParams) Reset() {
	*x = AssetParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetParams) ProtoMessage() {}

func (x *AssetParams) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetParams.ProtoReflect.Descriptor instead.
func (*AssetParams) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{1}
}

func (x *AssetParams) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *AssetParams) GetDecimals() uint32 {
	if x != nil {
		return x.Decimals
	}
	return 0
}

func (x *AssetParams) GetDefaultFrozen() bool {
	if x != nil {
		return x.DefaultFrozen
	}
	return false
}

func (x *AssetParams) GetUnitName() []byte {
	if x != nil {
		return x.UnitName
	}
	return nil
}

func (x *AssetParams) GetAssetName() []byte {
	if x != nil {
		return x.AssetName
	}
	return nil
}

func (x *AssetParams) GetUrl() []byte {
	if x != nil {
		return x.Url
	}
	return nil
}

func (x *AssetParams) GetMetadataHash() []byte {
	if x != nil {
		return x.MetadataHash
	}
	return nil
}

func (x *AssetParams) GetManager() []byte {
	if x != nil {
		return x.Manager
	}
	return nil
}

func (x *AssetParams) GetReserve() []byte {
	if x != nil {
		return x.Reserve
	}
	return nil
}

func (x *AssetParams) GetFreeze() []byte {
	if x != nil {
		return x.Freeze
	}
	return nil
}

func (x *AssetParams) GetClawback() []byte {
	if x != nil {
		return x.Clawback
	}
	return nil
}

type AssetHolding struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount uint64 `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
	Frozen bool   `protobuf:"varint,2,opt,name=frozen,proto3" json:"frozen,omitempty"`
}

func (x *AssetHolding) Reset() {
	*x = AssetHolding{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetHolding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetHolding) ProtoMessage() {}

func (x *AssetHolding) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetHolding.ProtoReflect.Descriptor instead.
func (*AssetHolding) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{2}
}

func (x *AssetHolding) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *AssetHolding) GetFrozen() bool {
	if x != nil {
		return x.Frozen
	}
	return false
}

type StateSchema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NumUint      uint64 `protobuf:"varint,1,opt,name=num_uint,json=numUint,proto3" json:"num_uint,omitempty"`
	NumByteSlice uint64 `protobuf:"varint,2,opt,name=num_byte_slice,json=numByteSlice,proto3" json:"num_byte_slice,omitempty"`
}

func (x *StateSchema) Reset() {
	*x = StateSchema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateSchema) ProtoMessage() {}

func (x *StateSchema) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateSchema.ProtoReflect.Descriptor instead.
func (*StateSchema) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{3}
}

func (x *StateSchema) GetNumUint() uint64 {
	if x != nil {
		return x.NumUint
	}
	return 0
}

func (x *StateSchema) GetNumByteSlice() uint64 {
	if x != nil {
		return x.NumByteSlice
	}
	return 0
}

type TealKeyValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// Types that are assignable to Value:
	//	*TealKeyValue_Bytes
	//	*TealKeyValue_Uint
	Value isTealKeyValue_Value `protobuf_oneof:"value"`
}

func (x *TealKeyValue) Reset() {
	*x = TealKeyValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TealKeyValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TealKeyValue) ProtoMessage() {}

func (x *TealKeyValue) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TealKeyValue.ProtoReflect.Descriptor instead.
func (*TealKeyValue) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{4}
}

func (x *TealKeyValue) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (m *TealKeyValue) GetValue() isTealKeyValue_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *TealKeyValue) GetBytes() []byte {
	if x, ok := x.GetValue().(*TealKeyValue_Bytes); ok {
		return x.Bytes
	}
	return nil
}

func (x *TealKeyValue) GetUint() uint64 {
	if x, ok := x.GetValue().(*TealKeyValue_Uint); ok {
		return x.Uint
	}
	return 0
}

type isTealKeyValue_Value interface {
	isTealKeyValue_Value()
}

type TealKeyValue_Bytes struct {
	Bytes []byte `protobuf:"bytes,2,opt,name=bytes,proto3,oneof"`
}

type TealKeyValue_Uint struct {
	Uint uint64 `protobuf:"varint,3,opt,name=uint,proto3,oneof"`
}

func (*TealKeyValue_Bytes) isTealKeyValue_Value() {}

func (*TealKeyValue_Uint) isTealKeyValue_Value() {}

type AppLocalState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Schema   *StateSchema    `protobuf:"bytes,1,opt,name=schema,proto3" json:"schema,omitempty"`
	KeyValue []*TealKeyValue `protobuf:"bytes,2,rep,name=key_value,json=keyValue,proto3" json:"key_value,omitempty"`
}

func (x *AppLocalState) Reset() {
	*x = AppLocalState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppLocalState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppLocalState) ProtoMessage() {}

func (x *AppLocalState) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppLocalState.ProtoReflect.Descriptor instead.
func (*AppLocalState) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{5}
}

func (x *AppLocalState) GetSchema() *StateSchema {
	if x != nil {
		return x.Schema
	}
	return nil
}

func (x *AppLocalState) GetKeyValue() []*TealKeyValue {
	if x != nil {
		return x.KeyValue
	}
	return nil
}

type AppParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApprovalProgram   []byte          `protobuf:"bytes,1,opt,name=approval_program,json=approvalProgram,proto3" json:"approval_program,omitempty"`
	ClearStateProgram []byte          `protobuf:"bytes,2,opt,name=clear_state_program,json=clearStateProgram,proto3" json:"clear_state_program,omitempty"`
	GlobalState       []*TealKeyValue `protobuf:"bytes,3,rep,name=global_state,json=globalState,proto3" json:"global_state,omitempty"`
	LocalStateSchema  *StateSchema    `protobuf:"bytes,4,opt,name=local_state_schema,json=localStateSchema,proto3" json:"local_state_schema,omitempty"`
	GlobalStateSchema *StateSchema    `protobuf:"bytes,5,opt,name=global_state_schema,json=globalStateSchema,proto3" json:"global_state_schema,omitempty"`
	ExtraProgramPages uint32          `protobuf:"varint,6,opt,name=extra_program_pages,json=extraProgramPages,proto3" json:"extra_program_pages,omitempty"`
}

func (x *AppParams) Reset() {
	*x = AppParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppParams) ProtoMessage() {}

func (x *AppParams) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppParams.ProtoReflect.Descriptor instead.
func (*AppParams) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{6}
}

func (x *AppParams) GetApprovalProgram() []byte {
	if x != nil {
		return x.ApprovalProgram
	}
	return nil
}

func (x *AppParams) GetClearStateProgram() []byte {
	if x != nil {
		return x.ClearStateProgram
	}
	return nil
}

func (x *AppParams) GetGlobalState() []*TealKeyValue {
	if x != nil {
		return x.GlobalState
	}
	return nil
}

func (x *AppParams) GetLocalStateSchema() *StateSchema {
	if x != nil {
		return x.LocalStateSchema
	}
	return nil
}

func (x *AppParams) GetGlobalStateSchema() *StateSchema {
	if x != nil {
		return x.GlobalStateSchema
	}
	return nil
}

func (x *AppParams) GetExtraProgramPages() uint32 {
	if x != nil {
		return x.ExtraProgramPages
	}
	return 0
}

type AccountData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status             Status                    `protobuf:"varint,1,opt,name=status,proto3,enum=Status" json:"status,omitempty"`
	Microalgos         uint64                    `protobuf:"varint,2,opt,name=microalgos,proto3" json:"microalgos,omitempty"`
	RewardsBase        uint64                    `protobuf:"varint,3,opt,name=rewards_base,json=rewardsBase,proto3" json:"rewards_base,omitempty"`
	RewardedMicroalgos uint64                    `protobuf:"varint,4,opt,name=rewarded_microalgos,json=rewardedMicroalgos,proto3" json:"rewarded_microalgos,omitempty"`
	VoteId             []byte                    `protobuf:"bytes,5,opt,name=vote_id,json=voteId,proto3" json:"vote_id,omitempty"`
	SelectionId        []byte                    `protobuf:"bytes,6,opt,name=selection_id,json=selectionId,proto3" json:"selection_id,omitempty"`
	StateProofId       []byte                    `protobuf:"bytes,7,opt,name=state_proof_id,json=stateProofId,proto3" json:"state_proof_id,omitempty"`
	VoteFirstValid     uint64                    `protobuf:"varint,8,opt,name=vote_first_valid,json=voteFirstValid,proto3" json:"vote_first_valid,omitempty"`
	VoteLastValid      uint64                    `protobuf:"varint,9,opt,name=vote_last_valid,json=voteLastValid,proto3" json:"vote_last_valid,omitempty"`
	VoteKeyDilution    uint64                    `protobuf:"varint,10,opt,name=vote_key_dilution,json=voteKeyDilution,proto3" json:"vote_key_dilution,omitempty"`
	AssetParams        map[uint64]*AssetParams   `protobuf:"bytes,11,rep,name=asset_params,json=assetParams,proto3" json:"asset_params,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	AssetHoldings      map[uint64]*AssetHolding  `protobuf:"bytes,12,rep,name=asset_holdings,json=assetHoldings,proto3" json:"asset_holdings,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	AuthAddr           []byte                    `protobuf:"bytes,13,opt,name=auth_addr,json=authAddr,proto3" json:"auth_addr,omitempty"`
	AppLocalStates     map[uint64]*AppLocalState `protobuf:"bytes,14,rep,name=app_local_states,json=appLocalStates,proto3" json:"app_local_states,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	AppParams          map[uint64]*AppParams     `protobuf:"bytes,15,rep,name=app_params,json=appParams,proto3" json:"app_params,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	TotalAppSchema     *StateSchema              `protobuf:"bytes,16,opt,name=total_app_schema,json=totalAppSchema,proto3" json:"total_app_schema,omitempty"`
	TotalExtraAppPages uint32                    `protobuf:"varint,17,opt,name=total_extra_app_pages,json=totalExtraAppPages,proto3" json:"total_extra_app_pages,omitempty"`
}

func (x *AccountData) Reset() {
	*x = AccountData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountData) ProtoMessage() {}

func (x *AccountData) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountData.ProtoReflect.Descriptor instead.
func (*AccountData) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{7}
}

func (x *AccountData) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_OFFLINE
}

func (x *AccountData) GetMicroalgos() uint64 {
	if x != nil {
		return x.Microalgos
	}
	return 0
}

func (x *AccountData) GetRewardsBase() uint64 {
	if x != nil {
		return x.RewardsBase
	}
	return 0
}

func (x *AccountData) GetRewardedMicroalgos() uint64 {
	if x != nil {
		return x.RewardedMicroalgos
	}
	return 0
}

func (x *AccountData) GetVoteId() []byte {
	if x != nil {
		return x.VoteId
	}
	return nil
}

func (x *AccountData) GetSelectionId() []byte {
	if x != nil {
		return x.SelectionId
	}
	return nil
}

func (x *AccountData) GetStateProofId() []byte {
	if x != nil {
		return x.StateProofId
	}
	return nil
}

func (x *AccountData) GetVoteFirstValid() uint64 {
	if x != nil {
		return x.VoteFirstValid
	}
	return 0
}

func (x *AccountData) GetVoteLastValid() uint64 {
	if x != nil {
		return x.VoteLastValid
	}
	return 0
}

func (x *AccountData) GetVoteKeyDilution() uint64 {
	if x != nil {
		return x.VoteKeyDilution
	}
	return 0
}

func (x *AccountData) GetAssetParams() map[uint64]*AssetParams {
	if x != nil {
		return x.AssetParams
	}
	return nil
}

func (x *AccountData) GetAssetHoldings() map[uint64]*AssetHolding {
	if x != nil {
		return x.AssetHoldings
	}
	return nil
}

func (x *AccountData) GetAuthAddr() []byte {
	if x != nil {
		return x.AuthAddr
	}
	return nil
}

func (x *AccountData) GetAppLocalStates() map[uint64]*AppLocalState {
	if x != nil {
		return x.AppLocalStates
	}
	return nil
}

func (x *AccountData) GetAppParams() map[uint64]*AppParams {
	if x != nil {
		return x.AppParams
	}
	return nil
}

func (x *AccountData) GetTotalAppSchema() *StateSchema {
	if x != nil {
		return x.TotalAppSchema
	}
	return nil
}

func (x *AccountData) GetTotalExtraAppPages() uint32 {
	if x != nil {
		return x.TotalExtraAppPages
	}
	return 0
}

type AccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountData                 *AccountData `protobuf:"bytes,1,opt,name=account_data,json=accountData,proto3" json:"account_data,omitempty"`
	Round                       uint64       `protobuf:"varint,2,opt,name=round,proto3" json:"round,omitempty"`
	AmountWithoutPendingRewards uint64       `protobuf:"varint,3,opt,name=amount_without_pending_rewards,json=amountWithoutPendingRewards,proto3" json:"amount_without_pending_rewards,omitempty"`
	MinBalance                  uint64       `protobuf:"varint,4,opt,name=min_balance,json=minBalance,proto3" json:"min_balance,omitempty"`
}

func (x *AccountResponse) Reset() {
	*x = AccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountResponse) ProtoMessage() {}

func (x *AccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountResponse.ProtoReflect.Descriptor instead.
func (*AccountResponse) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{8}
}

func (x *AccountResponse) GetAccountData() *AccountData {
	if x != nil {
		return x.AccountData
	}
	return nil
}

func (x *AccountResponse) GetRound() uint64 {
	if x != nil {
		return x.Round
	}
	return 0
}

func (x *AccountResponse) GetAmountWithoutPendingRewards() uint64 {
	if x != nil {
		return x.AmountWithoutPendingRewards
	}
	return 0
}

func (x *AccountResponse) GetMinBalance() uint64 {
	if x != nil {
		return x.MinBalance
	}
	return 0
}

var File_service_proto protoreflect.FileDescriptor

var file_service_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x2a, 0x0a, 0x0e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xc1, 0x02, 0x0a, 0x0b,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x12, 0x25, 0x0a,
	0x0e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x66, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x46, 0x72,
	0x6f, 0x7a, 0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x68,
	0x61, 0x73, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x48, 0x61, 0x73, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x07, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x66,
	0x72, 0x65, 0x65, 0x7a, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x66, 0x72, 0x65,
	0x65, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x61, 0x77, 0x62, 0x61, 0x63, 0x6b, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x63, 0x6c, 0x61, 0x77, 0x62, 0x61, 0x63, 0x6b, 0x22,
	0x3e, 0x0a, 0x0c, 0x41, 0x73, 0x73, 0x65, 0x74, 0x48, 0x6f, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x72, 0x6f, 0x7a, 0x65,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x66, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x22,
	0x4e, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x19,
	0x0a, 0x08, 0x6e, 0x75, 0x6d, 0x5f, 0x75, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x6e, 0x75, 0x6d, 0x55, 0x69, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x6e, 0x75, 0x6d,
	0x5f, 0x62, 0x79, 0x74, 0x65, 0x5f, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0c, 0x6e, 0x75, 0x6d, 0x42, 0x79, 0x74, 0x65, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x22,
	0x57, 0x0a, 0x0c, 0x54, 0x65, 0x61, 0x6c, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x16, 0x0a, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x48, 0x00, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x04, 0x75, 0x69, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x04, 0x75, 0x69, 0x6e, 0x74, 0x42,
	0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x61, 0x0a, 0x0d, 0x41, 0x70, 0x70, 0x4c,
	0x6f, 0x63, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x06, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12,
	0x2a, 0x0a, 0x09, 0x6b, 0x65, 0x79, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x54, 0x65, 0x61, 0x6c, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xc2, 0x02, 0x0a, 0x09,
	0x41, 0x70, 0x70, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x61, 0x6d, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x11, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x61, 0x6d, 0x12, 0x30, 0x0a, 0x0c, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x54, 0x65, 0x61,
	0x6c, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x67, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3a, 0x0a, 0x12, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x52, 0x10, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x12, 0x3c, 0x0a, 0x13, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x11, 0x67,
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x12, 0x2e, 0x0a, 0x13, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61,
	0x6d, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x50, 0x61, 0x67, 0x65, 0x73,
	0x22, 0xd8, 0x08, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x1f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x07, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x61, 0x6c, 0x67, 0x6f, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x61, 0x6c, 0x67, 0x6f,
	0x73, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x62, 0x61, 0x73,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73,
	0x42, 0x61, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x13, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64,
	0x5f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x61, 0x6c, 0x67, 0x6f, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x12, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x4d, 0x69, 0x63, 0x72, 0x6f,
	0x61, 0x6c, 0x67, 0x6f, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x76, 0x6f, 0x74, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x76, 0x6f, 0x74, 0x65, 0x49, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x6f, 0x66,
	0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x6f, 0x66, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x76, 0x6f, 0x74, 0x65, 0x5f,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0e, 0x76, 0x6f, 0x74, 0x65, 0x46, 0x69, 0x72, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x12, 0x26, 0x0a, 0x0f, 0x76, 0x6f, 0x74, 0x65, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x76, 0x6f, 0x74, 0x65,
	0x4c, 0x61, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x76, 0x6f, 0x74,
	0x65, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x64, 0x69, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x76, 0x6f, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x44, 0x69, 0x6c,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x46, 0x0a, 0x0e, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x5f, 0x68, 0x6f, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x48, 0x6f, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x0d, 0x61, 0x73, 0x73, 0x65, 0x74, 0x48, 0x6f, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x12,
	0x1b, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x41, 0x64, 0x64, 0x72, 0x12, 0x4a, 0x0a, 0x10,
	0x61, 0x70, 0x70, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73,
	0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x2e, 0x41, 0x70, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x61, 0x70, 0x70, 0x4c, 0x6f, 0x63,
	0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x12, 0x3a, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x5f,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x41, 0x70, 0x70, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x61, 0x70, 0x70, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x12, 0x36, 0x0a, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x70,
	0x70, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x0e, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x41, 0x70, 0x70, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x31, 0x0a, 0x15,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x61, 0x70, 0x70, 0x5f,
	0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x45, 0x78, 0x74, 0x72, 0x61, 0x41, 0x70, 0x70, 0x50, 0x61, 0x67, 0x65, 0x73, 0x1a,
	0x4c, 0x0a, 0x10, 0x41, 0x73, 0x73, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x22, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x4f, 0x0a,
	0x12, 0x41, 0x73, 0x73, 0x65, 0x74, 0x48, 0x6f, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x23, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x48, 0x6f, 0x6c, 0x64,
	0x69, 0x6e, 0x67, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x51,
	0x0a, 0x13, 0x41, 0x70, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x41, 0x70, 0x70, 0x4c, 0x6f, 0x63, 0x61,
	0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x1a, 0x48, 0x0a, 0x0e, 0x41, 0x70, 0x70, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x20, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x41, 0x70, 0x70, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xbe, 0x01, 0x0a, 0x0f,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2f, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x05, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x43, 0x0a, 0x1e, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x77, 0x69, 0x74, 0x68, 0x6f, 0x75, 0x74, 0x5f, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1b,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x57, 0x69, 0x74, 0x68, 0x6f, 0x75, 0x74, 0x50, 0x65, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6d,
	0x69, 0x6e, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0a, 0x6d, 0x69, 0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x2a, 0x38, 0x0a, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x4f, 0x46, 0x46, 0x4c, 0x49, 0x4e,
	0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x4e, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x01, 0x12,
	0x15, 0x0a, 0x11, 0x4e, 0x4f, 0x54, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x49, 0x43, 0x49, 0x50, 0x41,
	0x54, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x32, 0x44, 0x0a, 0x07, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x12, 0x39, 0x0a, 0x12, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0f, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_service_proto_rawDescOnce sync.Once
	file_service_proto_rawDescData = file_service_proto_rawDesc
)

func file_service_proto_rawDescGZIP() []byte {
	file_service_proto_rawDescOnce.Do(func() {
		file_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_service_proto_rawDescData)
	})
	return file_service_proto_rawDescData
}

var file_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_service_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_service_proto_goTypes = []interface{}{
	(Status)(0),             // 0: Status
	(*AccountRequest)(nil),  // 1: AccountRequest
	(*AssetParams)(nil),     // 2: AssetParams
	(*AssetHolding)(nil),    // 3: AssetHolding
	(*StateSchema)(nil),     // 4: StateSchema
	(*TealKeyValue)(nil),    // 5: TealKeyValue
	(*AppLocalState)(nil),   // 6: AppLocalState
	(*AppParams)(nil),       // 7: AppParams
	(*AccountData)(nil),     // 8: AccountData
	(*AccountResponse)(nil), // 9: AccountResponse
	nil,                     // 10: AccountData.AssetParamsEntry
	nil,                     // 11: AccountData.AssetHoldingsEntry
	nil,                     // 12: AccountData.AppLocalStatesEntry
	nil,                     // 13: AccountData.AppParamsEntry
}
var file_service_proto_depIdxs = []int32{
	4,  // 0: AppLocalState.schema:type_name -> StateSchema
	5,  // 1: AppLocalState.key_value:type_name -> TealKeyValue
	5,  // 2: AppParams.global_state:type_name -> TealKeyValue
	4,  // 3: AppParams.local_state_schema:type_name -> StateSchema
	4,  // 4: AppParams.global_state_schema:type_name -> StateSchema
	0,  // 5: AccountData.status:type_name -> Status
	10, // 6: AccountData.asset_params:type_name -> AccountData.AssetParamsEntry
	11, // 7: AccountData.asset_holdings:type_name -> AccountData.AssetHoldingsEntry
	12, // 8: AccountData.app_local_states:type_name -> AccountData.AppLocalStatesEntry
	13, // 9: AccountData.app_params:type_name -> AccountData.AppParamsEntry
	4,  // 10: AccountData.total_app_schema:type_name -> StateSchema
	8,  // 11: AccountResponse.account_data:type_name -> AccountData
	2,  // 12: AccountData.AssetParamsEntry.value:type_name -> AssetParams
	3,  // 13: AccountData.AssetHoldingsEntry.value:type_name -> AssetHolding
	6,  // 14: AccountData.AppLocalStatesEntry.value:type_name -> AppLocalState
	7,  // 15: AccountData.AppParamsEntry.value:type_name -> AppParams
	1,  // 16: Default.AccountInformation:input_type -> AccountRequest
	9,  // 17: Default.AccountInformation:output_type -> AccountResponse
	17, // [17:18] is the sub-list for method output_type
	16, // [16:17] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_service_proto_init() }
func file_service_proto_init() {
	if File_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetHolding); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateSchema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TealKeyValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppLocalState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_service_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*TealKeyValue_Bytes)(nil),
		(*TealKeyValue_Uint)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_proto_goTypes,
		DependencyIndexes: file_service_proto_depIdxs,
		EnumInfos:         file_service_proto_enumTypes,
		MessageInfos:      file_service_proto_msgTypes,
	}.Build()
	File_service_proto = out.File
	file_service_proto_rawDesc = nil
	file_service_proto_goTypes = nil
	file_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DefaultClient is the client API for Default service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DefaultClient interface {
	AccountInformation(ctx context.Context, in *AccountRequest, opts ...grpc.CallOption) (*AccountResponse, error)
}

type defaultClient struct {
	cc grpc.ClientConnInterface
}

func NewDefaultClient(cc grpc.ClientConnInterface) DefaultClient {
	return &defaultClient{cc}
}

func (c *defaultClient) AccountInformation(ctx context.Context, in *AccountRequest, opts ...grpc.CallOption) (*AccountResponse, error) {
	out := new(AccountResponse)
	err := c.cc.Invoke(ctx, "/Default/AccountInformation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DefaultServer is the server API for Default service.
type DefaultServer interface {
	AccountInformation(context.Context, *AccountRequest) (*AccountResponse, error)
}

// UnimplementedDefaultServer can be embedded to have forward compatible implementations.
type UnimplementedDefaultServer struct {
}

func (*UnimplementedDefaultServer) AccountInformation(context.Context, *AccountRequest) (*AccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountInformation not implemented")
}

func RegisterDefaultServer(s *grpc.Server, srv DefaultServer) {
	s.RegisterService(&_Default_serviceDesc, srv)
}

func _Default_AccountInformation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DefaultServer).AccountInformation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Default/AccountInformation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DefaultServer).AccountInformation(ctx, req.(*AccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Default_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Default",
	HandlerType: (*DefaultServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AccountInformation",
			Handler:    _Default_AccountInformation_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}
